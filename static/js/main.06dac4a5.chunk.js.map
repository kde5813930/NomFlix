{"version":3,"sources":["asseets/noPosterSmall.PNG","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","console","log","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divder","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06dac4a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.abbc9c84.PNG\";","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n:not(:last-child){\n  margin-bottom: 50px;\n}\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\n\nconst Section = ({title, children}) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n\n);\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n  ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n\nexport default Loader;","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width:100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => (\n<Container>\n  <Text color={color}>{text}</Text>\n</Container>\n);\n\nMessage.propTypes = {\n  text: propTypes.string.isRequired,\n  color: propTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity .2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0;\n  transition: opacity .2s linear;\n`;\n\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n  \n  <Link to={isMovie? `/movie/${id}` : `/show/${id}` }>\n    <Container>\n    <ImageContainer>\n      <Image \n      bgUrl={imageUrl ? \n      `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../asseets/noPosterSmall.PNG\").default} />\n      <Rating> \n        <span role=\"img\" aria-label=\"rating\">{rating}\n          ⭐\n        </span>{\" \"}\n        {rating}/10\n        </Rating>      \n    </ImageContainer>\n    <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n    <Year>{year}</Year>\n    </Container>\n  </Link>\n\n\n)\n\nPoster.propTypes = {\n  id: propTypes.number.isRequired,\n  imageUrl: propTypes.string,\n  title: propTypes.string.isRequired,\n  rating: propTypes.number,\n  year: propTypes.string,\n  isMovie: propTypes.bool\n}\n\n\nexport default Poster;","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading}) => (\n\n<>\n  <Helmet>\n    <title>Movies | Nomflix</title>\n  </Helmet>\n  \n{  loading ? (\n    <Loader /> \n    ) : (\n    <Container>\n    {nowPlaying && nowPlaying.length > 0 && (\n      <Section title=\"Now playing\">\n        {nowPlaying.map(movie => (\n          <Poster \n          key={movie.id} \n          id={movie.id} \n          title={movie.original_title} \n          imageUrl={movie.poster_path}\n          rating={movie.vote_average}\n          year={movie.release_date.substring(0, 4)}\n          isMovie={true}\n          />\n        ))}\n      </Section>\n    )}\n    {popular && popular.length > 0 && (\n      <Section title=\"Popular Movies\">\n        {popular.map(movie => (\n          <Poster \n          key={movie.id} \n          id={movie.id} \n          title={movie.original_title} \n          imageUrl={movie.poster_path}\n          rating={movie.vote_average}\n          year={movie.release_date.substring(0, 4)}\n          isMovie={true}\n          />\n        ))}\n      </Section>\n    )}\n    {upComing && upComing.length > 0 && (\n      <Section title=\"UpComing Movies\">\n        {upComing.map(movie =>  (\n          <Poster \n          key={movie.id} \n          id={movie.id} \n          title={movie.original_title} \n          imageUrl={movie.poster_path}\n          rating={movie.vote_average}\n          year={movie.release_date.substring(0, 4)}\n          isMovie={true}\n          />\n        ))}\n      </Section>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>)} \n  </>\n);\n\n\n\n//children을 내부에 넣는 이유는 우리의 section에서 div 내부에 원하는 children을 넣을 수 있어야 하기 때문에!\n\n\nHomePresenter.propTypes = {\n  nowPlaying: propTypes.array,\n  upComing: propTypes.array,\n  popular: propTypes.array,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired,\n}\n\nexport default HomePresenter;\n\n\n//substring(start,end)\n// string 문자를 잘라쓸 수 있는 기능","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL:\"https://api.themoviedb.org/3\",\n  params:{\n    api_key:\"00af4f6e6a5a4dbdbbae42fb39658b48\",\n    language:\"en-US\"\n  }\n});\n\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id => \n  api.get(`movie/${id}`, {\n    params: {\n      append_to_response:'videos'\n    }\n  }),\n  search: term => \n  api.get(\"search/movie\", {\n    params: {\n      query:encodeURIComponent(term)\n      //어떤 파라미터 값을 이 함수에 넘기든지 값을 인코딩하고 그 문자열로 검색한다.\n    }\n  })\n\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id => \n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response:'videos'\n      } //이렇게하면 showDetail을 클릭했을때 개별적으로 params를 별도로 가져올 수 있다.\n    }),\n    search: term => \n      api.get(\"search/tv\", {\n    params: {\n      query:encodeURIComponent(term)\n      //어떤 파라미터 값을 이 함수에 넘기든지 값을 인코딩하고 그 문자열로 검색한다.\n    }\n  })\n  };\n\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\nasync componentDidMount(){\n  try{\n    const {\n      data: { results: nowPlaying } \n    } =  await moviesApi.nowPlaying();\n    const {\n      data: { results: upComing } \n    } =  await moviesApi.upComing();\n    const {\n      data: { results: popular } \n    } =  await moviesApi.popular();\n\n\n    this.setState({\n      nowPlaying,\n      upComing,\n      popular\n    })\n\n    //자바스크립트는 해당 api 데이터를 가져오기까지 기다려주지않고 다음단계를 바로 실행하기 때문에\n    //async,await 로 해당 api 데이터를 모두 불러올때까지 기다려 달라고 해야한다.\n  }catch{\n    this.setState({\n      error: \"Can't find movie information.\"\n    })\n  }finally{\n    this.setState({\n      loading: false\n    })\n  }\n}\n\n//try 실행하고 뭔가 작동하지 않으면 error를 catch하는거야 그리고 설사 성공했거나 실패해도\n//finally 마지막에는 뭔가를 해준다.\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return(\n      <HomePresenter \n      nowPlaying={nowPlaying} \n      upComing={upComing} \n      popular={popular} \n      error={error}\n      loading={loading}\n      />\n    );\n  }\n}\n\n\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from 'Components/Loader';\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading}) => (\n<>\n  <Helmet>\n    <title>TV | Nomflix</title>\n  </Helmet>\n  {\n    loading ? ( \n    <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster \n                key={show.id} \n                id={show.id} \n                title={show.original_name} \n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster \n                key={show.id} \n                id={show.id} \n                title={show.original_name} \n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster \n                key={show.id} \n                id={show.id} \n                title={show.original_name} \n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>)} \n  </>\n);\n\n\n\nTVPresenter.propTypes = {\n  topRated: propTypes.array,\n  popular: propTypes.array,\n  airingToday: propTypes.array,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired,\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from 'api';\n\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount(){\n    try{\n      const {\n        data:{results: topRated}\n      } = await tvApi.topRated();\n      const {\n        data:{results: popular}\n      } = await tvApi.popular();\n      const {\n        data:{results: airingToday}\n      } = await tvApi.airingToday(); \n\n      this.setState({\n        topRated, \n        popular, \n        airingToday\n      });\n\n    } catch{\n      this.setState({\n        error: \"Can't find TV infoamtion.\"\n      });\n    } finally{\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render(){\n    const {topRated,popular,airingToday,error,loading} = this.state;\n    return (\n    <TVPresenter \n    topRated={topRated}\n    popular={popular}\n    airingToday={airingToday}\n    error={error}\n    loading={loading}\n    />\n    );\n  }\n}","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 15px;\n  width: 100%;\n`;\n\nconst Input = styled.input `\n  all:unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, error, searchTerm, loading, handleSubmit, updateTerm}) => (\n  <>\n    <Helmet>\n    <title>Search | Nomflix</title>\n    </Helmet>\n    {\n      <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input \n        placeholder=\"Search Movies or TV Shows...\" \n        value={searchTerm} \n        onChange={updateTerm}\n        >\n        </Input>\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster \n                key={movie.id} \n                id={movie.id} \n                title={movie.original_title} \n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section> \n        )}\n          {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster \n                key={show.id} \n                id={show.id} \n                title={show.original_name} \n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section> \n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {\n        movieResults && \n        tvResults && \n        movieResults.length === 0 && \n        tvResults.length === 0 && \n        <Message text=\"Nothing found 🤷\" color=\"#aab2b3‍\" /> \n        }\n        </>\n      )}\n    </Container>}\n  </>\n);\n\n\nSearchPresenter.propTypes = {\n  movieResults: propTypes.array,\n  tvResults: propTypes.array,\n  error: propTypes.string,\n  searchTerm: propTypes.string,\n  loading: propTypes.bool.isRequired,\n  handleSubmit: propTypes.func.isRequired,\n  updateTerm: propTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\"\n\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from 'api';\n\n\nexport default class extends React.Component {\n  state = {\n    movieResults:null,\n    tvResults:null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if(searchTerm !== \"\"){\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const { target:{value} } = event;\n    console.log(value)\n    this.setState({\n      searchTerm: value\n    })\n  };\n\n   searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading:true }); // 첫째로 로딩을 해주고\n    try{\n      const {                                            // 결과값이 일치하면 try로 반환\n        data:{results: movieResults}\n      } = await moviesApi.search(searchTerm);\n      const {\n        data:{results: tvResults}              \n      } = await tvApi.search(searchTerm);\n\n      this.setState({movieResults,tvResults });\n      \n    }catch{\n      this.setState({error:\"Cant't find results.\"});      // 일치하지 않으면 에러 \n          \n    }finally{\n      this.setState({ loading: false });                  // 결과가 try든 catch든 마지막엔 finally로 반환\n    }\n  }\n\n  render(){\n    const {movieResults,tvResults,searchTerm,error,loading} = this.state;\n    return(\n    <SearchPresenter \n    movieResults={movieResults}\n    tvResults={tvResults}\n    error={error}\n    searchTerm={searchTerm}\n    loading={loading}\n    handleSubmit={this.handleSubmit}\n    updateTerm={this.updateTerm}\n    />\n    );\n  }\n\n}","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divder = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\n\n\nconst DetailPresenter = ({ result, error, loading}) => \n  loading? (\n    <>\n    <Helmet><title>Loading••• | Nomflix</title></Helmet>\n    <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/w300${result.backdrop_path}`}/>\n      <Content>\n        <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/w300${result.poster_path}` : require(\"../../asseets/noPosterSmall.PNG\").default} />\n        <Data>\n        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n        <ItemContainer>\n          <Item>{result.release_date ? \n                  result.release_date.substring(0, 4) \n                : result.first_air_date.substring(0, 4)\n                }\n          </Item>\n          <Divder>•</Divder>\n          <Item>{result.runtime ? \n                  result.runtime\n                : result.episode_run_time[0]\n                } min\n          </Item>\n          <Divder>•</Divder>\n          <Item>\n            {result.genres &&\n                  result.genres.map((genre, index) => \n                  index === result.genres.length -1 ? genre.name : `${genre.name} / ` \n              )}\n          </Item>\n        </ItemContainer>\n        <Overview>{result.overview}</Overview>\n      </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: propTypes.object,\n  error: propTypes.string,\n  loading: propTypes.bool.isRequired,\n}\n\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n\n\n","import { moviesApi, tvApi } from 'api';\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props){\n    super(props);\n    const {\n      location: {pathname}\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n  }\n};\n\n  async componentDidMount() {\n    const {\n      match:{params: {id}\n      },\n      history: {push}\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    //parseInt는 string을 가져다 숫자로 변환하는 것 (id는 type이 string이기 때문에 변환해준다.)\n    if(isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try{\n      if(isMovie){\n        ( {data:result} = await moviesApi.movieDetail(parsedId));\n      } else {\n        ( {data:result} = await tvApi.showDetail(parsedId));\n      }\n    } catch{\n      this.setState({ error:\"Can't find anything.\" });\n    } finally{\n      this.setState({ loading:false, result })\n    }\n  }\n\n  render(){\n    const { result, error, loading } = this.state;\n    return <DetailPresenter \n      result={result} \n      error={error}\n      loading={loading}\n      />;\n  }\n}","import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color:white;\n  position:fixed;\n  top:0;\n  left:0;\n  width:100%;\n  height:50px;\n  display:flex;\n  align-items:center;\n  padding: 0px 10px;\n  background-color:rgba(20,20,20, 0.7);\n  z-index:10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display:flex;\n`;\n\nconst Item = styled.li`\nwidth:80px;\nheight:50px;\ntext-align:center;\nborder-bottom:5px solid ${props => props.current? \"red\" : \"transparent\"};\ntransition: border-bottom .4s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\nheight:50px;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\n`;\n\n\n\nexport default withRouter(({location: {pathname}}) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to='/Nomflix'>Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to='/tv'>TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to='/search'>Search</SLink>\n      </Item>\n    </List>\n  </Header>\n  ));","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"./Header\";\n\n\nexport default () => (\n  <Router><>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/tv\" exact component={TV}/>\n      <Route path=\"/search\" exact component={Search}/>\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      {/* : <- 이것이 의미하는건 변경할 될 수 있는 이름이 오게하기 위해서 넣어주는것 */}\n      <Redirect from=\"*\" to=\"/\"/>\n    </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n${reset};\na{\n  text-decoration:none;\n  color:inherit;\n}\n*{\n  box-sizing:border-box;\n}\nbody{\n  font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size:12px;\n  background-color:rgba(20,20,20, 1);\n  color:white;\n  padding-top:50px;\n}\n\n`;\n\nexport default globalStyle;","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyle from \"Components/GlobalStyle\";\n\n\nclass App extends React.Component {\n  render() {\n    return <>\n    <Router />\n    <GlobalStyle />\n    </>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"api\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}